Sure! Here's a high-level overview of the steps you would need to take to build an app that uses the Whisper ASR API and the ChatGPT API to convert voice prompts to text, generate responses, and play them back as audio:

Set up API credentials: You would need to sign up for an account with OpenAI and obtain the necessary API credentials for both the Whisper ASR API and the ChatGPT API.
Record and process voice prompts: In your app, you would need to capture voice prompts from the user using a microphone or other audio input method. You can then send the recorded audio to the Whisper ASR API to convert it to text. You would receive the transcribed text as the API response.
Use transcribed text as prompt: Take the transcribed text from the Whisper ASR API response and use it as a prompt to send to the ChatGPT API. The text prompt would serve as an instruction to generate a response from the ChatGPT model.
Generate response: Send the transcribed text as a prompt to the ChatGPT API and wait for the API response, which would contain the generated text response from the model.
Convert text response to audio: Once you receive the text response from the ChatGPT API, you can use a text-to-speech (TTS) library or service to convert the text into audio. There are many TTS options available, such as Google Text-to-Speech, Amazon Polly, or the OpenAI TTS API.
Play audio response: After converting the text response to audio, you can play the audio back to the user using a media player or an audio playback library in your app. This could be done through speakers or headphones, depending on your app's requirements.
Handle errors and edge cases: Remember to handle errors and edge cases, such as network failures, API errors, and unexpected input from the user, in your app to ensure a smooth user experience.

That's the basic outline of how you could build an app that takes voice prompts, converts them to text using the Whisper ASR API, generates responses with the ChatGPT API, converts the responses back to audio using TTS, and plays them back to the user. Depending on your specific requirements and platform, you would need to implement the app logic and user interface using appropriate programming languages, frameworks, and libraries.